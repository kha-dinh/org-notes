#+title: Cryptography

* Kerckhoffs' Principle
+ *Kerckhoffs' principle*: in any cryptography algorithm, only the key need to be kept secret. The crypto algorithm is not secret.
  + Secret algorithms is insecure.

* Perfect Secrecy
+ Perfect Secrecy (Shannon 1949): given a ciphertext c, an attacker cannot determine the message that was the plaintext. That is,
  $PR[E(k,m_{0}) = c] = PR[E(k,m_{1}) = c]$
+ To achieve perfect secrecy, the key length need to be greateer of equal than the message length (e.g., One Time Pad).
+ In practice, this is hard to achieve, so most encryption schemes only limit the computational power of the adversary
** Non-perfect secrecy
+ Non-perfect secrecy: Given two ciphertext $c_{1} = k xor m_{1}$ and $c_{2} = k xor m_{2}$
  Attacker can compute  $c_{1} xor c_{2} = m_{1} xor m_{2}$. Therefore, if $m_{1}$ is leak, $m_{2}$ is also leaked.



* Confusion vs. diffusion
+ *Confusion* obscure the relationship between plaintext and ciphertext (e.g., OTP)
+ *Diffusion* spread plaintext statistic through the ciphertext. For example, if we arrange the plaintext into a matrix and scramble the row and columns, we get a new ciphertext. The key for this kind of encryption is the matrix permutation.


* [[file:20211012132045-attack_models_of_cryptography.org][Attack Models of Cryptography]]
* [[file:20211012141420-symmetric_key_encryption.org][Symmetric Key Encryption]]
