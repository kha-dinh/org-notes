:PROPERTIES:
:ID:       8955812b-65bf-470a-8010-68078f6fce07
:END:
#+title: Distributed System Final

* Distributed System
** Vs. Parallel
+ Have networking
+ No shared clock
** Overview
*** There is no global clock
- Mutual exclusion
*** Nondeterminism
-  Race conditions
*** Prone to failure
*** Limited bandwidth
*** Latency
** Transparency
*** Access
*** Location
*** Migration & Relocation
*** Replication
*** Concurrency
*** Failure
** Scaling techniques
*** Hiding communication latency
**** Asynchronous
**** Reduce communication
*** Distribution
*** Replication
* Synchronization
** Network Time Protocol
** Lamport Logical Clock :ATTACH:
:PROPERTIES:
:ID:       cd6240f2-11fa-4a54-a5c3-b462852a784a
:END:
 [[attachment:_20210531_153831screenshot.png]]
** Totally Ordered Multicast
** Vector Clock
* Hadoop MapReduce
* Cassandra
** CAP Theorem
+ Its imposible for a distributed to provide more than 3:
  - Consistency
  - Availbility
  - Partition tolerence
+ CA: RDBMS
+ AP: Cassandra, CouchDB,DynamoDB
+ CP: MongoDB, HBase, Redis
** Overview
 + Distributed, fault tolerant, scalable, column oriented data store
** NoSQL vs RDMBS
** Data Model
+ Table: Muilti dimentional map indexed by key
** Write
+ Client sends write to front-end node
  - Send to all replica nodes
*** Replica write
1. Log in commit log
2. change to memtable
3. Flush memtable to disk when full
4. Compation

** Architecture
*** Partitioning
+ Ring Topology
+
*** Replication
+ Replication factor N: Each item is replicated at N node
**** Rack Unaware
+ Replicate at N-1 successive node
**** Rack Aware
+ Use zookeeper to choose leader
**** Datacenter Aware
+ Leader is chosen at Datacenter level
*** Cluster membership
